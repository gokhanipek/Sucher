{"version":3,"sources":["redux/actions.js","components/ResultCard/ResultCard.js","components/Results/Results.js","components/Search/Pagination.js","components/Search/Search.js","components/Logo/Logo.js","components/Home/Home.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/state.js","redux/reducers/index.js","redux/sagas.js","redux/store.js","index.js"],"names":["receiveApiDataAction","data","type","ResultCard","item","className","src","owner","avatar_url","alt","name","href","html_url","target","rel","login","full_name","class","stargazers_count","language","svn_url","Results","searchResults","map","key","id","Pagination","postsPerPage","totalPosts","paginate","pageNumbers","i","Math","ceil","push","pageNumber","onClick","connect","get","dispatch","getSearchRepoRequest","useState","searchTerm","setSearchTerm","currentPage","setCurrentPage","resultsPerPage","results","setSearchResults","useEffect","indexOfLastItem","indexOfFirstItem","currentItems","slice","onSubmit","e","preventDefault","query","encodeURIComponent","trim","placeholder","onChange","event","value","length","Logo","classes","document","documentElement","addEventListener","eyeMovementAnimation","removeEventListener","querySelectorAll","forEach","x","getBoundingClientRect","left","clientWidth","y","top","clientHeight","rot","atan2","pageX","pageY","PI","style","transform","Home","App","Boolean","window","location","hostname","match","initialState","addReducer","state","combineReducers","requestApiData","action","axios","params","q","sort","order","response","put","console","log","takeEvery","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","mySaga","rootElement","getElementById","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0ecd6f8a.chunk.js","sourcesContent":["export const GET_SEARCH_REPO_REQUEST = \"GET_SEARCH_REPO_REQUEST\";\r\nexport const GET_SEARCH_REPO_RESPONSE = \"GET_SEARCH_REPO_RESPONSE\";\r\n\r\n\r\nexport const getSearchRepoRequest = (data) => ({ type: GET_SEARCH_REPO_REQUEST, data });\r\nexport const receiveApiDataAction = data => ({ type: GET_SEARCH_REPO_RESPONSE, data });\r\n","import React from 'react'\r\nimport './ResultCard.scss';\r\n\r\nconst ResultCard = ({item}) => {\r\n    return (\r\n        <div className=\"result-card-wrapper\">\r\n            <img className=\"result-card-image\" src={item.owner.avatar_url} alt=\"avatar\" />\r\n            <div className=\"result-card-information\">\r\n                 <h2 className=\"repo-name\">{item.name}\r\n                    <span className=\"repo-owner\">\r\n                        <a className=\"teal-text\" href={item.owner.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{item.owner.login}</a> - {item.full_name}\r\n                    </span>\r\n                </h2>\r\n                <div className=\"repo-card-bottom-info\">\r\n                    <p className=\"repo-stars\"><i class=\"material-icons yellow-text\">star</i>{item.stargazers_count}</p>\r\n                    <p className=\"repo-language\">{item.language}</p>\r\n                </div>\r\n            </div>\r\n            <a className=\"btn result-card-link\" href={item.svn_url} target=\"_blank\" rel=\"noopener noreferrer\">Go to link</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultCard\r\n","import React from 'react'\r\nimport ResultCard from '../ResultCard/ResultCard';\r\n\r\nconst Results = ({searchResults}) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {searchResults.map(item => <ResultCard key={item.id} item={item} />)}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React from 'react'\r\n\r\nconst Pagination = ({ postsPerPage, totalPosts, paginate }) => {\r\n    const pageNumbers = [];\r\n  \r\n    for (let i = 1; i <= Math.ceil(totalPosts / postsPerPage); i++) {\r\n      pageNumbers.push(i);\r\n    }\r\n  \r\n    return (\r\n        <ul className=\"pagination\">\r\n            {pageNumbers.map(pageNumber => (\r\n                <li key={pageNumber} className=\"page-item\">\r\n                    <a\r\n                        onClick={() => paginate(pageNumber)}\r\n                        href=\"!#\"\r\n                        className=\"page-link\"\r\n                    >\r\n                        {pageNumber}\r\n                    </a>\r\n                </li>\r\n            ))}\r\n      </ul>\r\n    );\r\n  };\r\n  export default Pagination;\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { get } from 'lodash';\r\nimport { getSearchRepoRequest } from '../../redux/actions';\r\nimport Results from './../Results/Results';\r\nimport Pagination from './Pagination';\r\nimport './Search.scss';\r\nconst Search = ({getSearchRepoRequest, searchResults}) => {\r\n    \r\n    const [ searchTerm, setSearchTerm ] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [resultsPerPage] = useState(25);\r\n    const [results, setSearchResults] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        setSearchResults(searchResults)\r\n    }, [searchResults]);\r\n    \r\n\r\n    const indexOfLastItem = currentPage * resultsPerPage;\r\n    const indexOfFirstItem = indexOfLastItem - resultsPerPage;\r\n    const currentItems = results.slice(indexOfFirstItem, indexOfLastItem);\r\n    const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const query = encodeURIComponent(searchTerm.trim());\r\n        if (query === '') return;\r\n        getSearchRepoRequest(query);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    const paginate = pageNumber => {\r\n        setCurrentPage(pageNumber);\r\n    };\r\n    \r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col s12 m8 l6 offset-m2 offset-l3 form-container\" onSubmit={submitHandler}>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12 form-input-container\">\r\n                        <input placeholder=\"Type a repo name...\" id=\"first_name\" type=\"text\" className=\"validate\" onChange={handleChange} />\r\n                        <button className=\"btn form-button\" type=\"submit\" name=\"action\"> Search\r\n                            <i className=\"material-icons right white-text\">send</i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <Results searchResults={currentItems} />\r\n                {results.length > 25 &&\r\n                    <Pagination\r\n                        postsPerPage={resultsPerPage}\r\n                        totalPosts={results.length}\r\n                        paginate={paginate}\r\n                    />\r\n                }\r\n                {results.length === 0 && \r\n                    <p>No results</p>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch =>({\r\n    getSearchRepoRequest: (data) => dispatch(getSearchRepoRequest(data))\r\n})\r\nconst mapStateToProps = ({data}) => ({ \r\n    searchResults: get(data, 'searchResults.items', [])\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { useEffect } from 'react'\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({classes}) => {\r\n    useEffect(() => {\r\n        document.documentElement.addEventListener('mousemove', eyeMovementAnimation)\r\n        return () => {\r\n          document.documentElement.removeEventListener('mousemove', eyeMovementAnimation);\r\n        }\r\n      }, [])\r\n\r\n      const eyeMovementAnimation = event => {\r\n        let eye = document.querySelectorAll('.eye');\r\n        eye.forEach(e => {\r\n          let x = (e.getBoundingClientRect().left) + (e.clientWidth / 2)\r\n          let y = (e.getBoundingClientRect().top) + (e.clientHeight / 2)\r\n          let radian = Math.atan2(event.pageX - x, event.pageY - y)\r\n          let rot = (radian * (180 / Math.PI) * -1) + 270;\r\n          e.style.transform = \"rotate(\" + rot + \"deg)\";\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className={`logo-container ${classes}`}>\r\n          <div className=\"face\">\r\n            <div className=\"eyes\">\r\n              <div className=\"eye\"></div>\r\n              <div className=\"eye\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport Search from '../Search/Search';\r\nimport Logo from './../Logo/Logo';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <Logo />\r\n            <Search />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Home;","import React from 'react';\nimport './App.css';\nimport Home from './components/Home/Home';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Home />\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    searchResults: {},\r\n};\r\n\r\nexport default initialState;","import initialState from './initialState';\r\n  \r\nfunction addReducer(state = initialState, {type, data}) {\r\n  switch(type) {\r\n    case 'GET_SEARCH_REPO_REQUEST':\r\n      return { ...state };\r\n    case 'GET_SEARCH_REPO_RESPONSE':\r\n      return { ...state, searchResults: data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default addReducer;\r\n  ","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./state\";\r\n\r\nexport default combineReducers({\r\n  data\r\n});\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\n// import { call, put, takeEvery, takeLatest, take } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\n\r\n\r\nimport { \r\n    GET_SEARCH_REPO_REQUEST,\r\n    receiveApiDataAction,\r\n } from \"./actions\";\r\n\r\nexport function* getSearchRepoRequest(action) {\r\n      try {\r\n        const response = yield axios.get(\"https://api.github.com/search/repositories\",\r\n            {\r\n                params: {\r\n                    q: action.data,\r\n                    sort: 'stars',\r\n                    order: 'desc'\r\n                }\r\n            }\r\n        );\r\n        const { data } = response;\r\n        yield put(receiveApiDataAction(data));\r\n      } catch (e) {\r\n          console.log(e);\r\n      }\r\n};\r\n  \r\n\r\nexport default function* requestApiData() {\r\n  yield takeEvery( GET_SEARCH_REPO_REQUEST, getSearchRepoRequest );\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport reducer from \"./reducers\";\r\nimport mySaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst rootElement = document.getElementById('root')\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n)\n\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}