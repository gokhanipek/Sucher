{"version":3,"sources":["redux/actions.js","components/ResultCard/ResultCard.js","components/Results/Results.js","components/Search/Search.js","components/Logo/Logo.js","components/Home/Home.js","App.js","serviceWorker.js","redux/reducers/initialState.js","redux/reducers/state.js","redux/reducers/index.js","redux/sagas.js","redux/store.js","index.js"],"names":["receiveApiDataAction","data","type","ResultCard","item","className","src","owner","avatar_url","alt","name","href","html_url","target","rel","login","full_name","stargazers_count","language","svn_url","Results","searchResults","map","key","id","connect","searchResultsItems","get","searchResult","dispatch","getSearchRepoRequest","query","currentPage","useState","searchTerm","setSearchTerm","setCurrentPage","results","setSearchResults","useEffect","onSubmit","e","preventDefault","encodeURIComponent","trim","page","placeholder","onChange","event","value","total_count","breakLabel","breakClassName","pageCount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","window","scrollTo","top","left","behavior","selectedPage","selected","containerClassName","subContainerClassName","activeClassName","items","length","Logo","classes","document","documentElement","addEventListener","eyeMovementAnimation","removeEventListener","querySelectorAll","forEach","x","getBoundingClientRect","clientWidth","y","clientHeight","rot","Math","atan2","pageX","pageY","PI","style","transform","wrapper","App","Boolean","location","hostname","match","initialState","addReducer","state","combineReducers","requestApiData","action","axios","params","q","sort","order","per_page","response","put","console","log","takeEvery","sagaMiddleware","createSagaMiddleware","createStore","reducer","composeWithDevTools","applyMiddleware","run","mySaga","rootElement","getElementById","ReactDOM","render","store","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8371df00.chunk.js","sourcesContent":["export const GET_SEARCH_REPO_REQUEST = \"GET_SEARCH_REPO_REQUEST\";\r\nexport const GET_SEARCH_REPO_RESPONSE = \"GET_SEARCH_REPO_RESPONSE\";\r\n\r\n\r\nexport const getSearchRepoRequest = data => ({ type: GET_SEARCH_REPO_REQUEST, data });\r\nexport const receiveApiDataAction = data => ({ type: GET_SEARCH_REPO_RESPONSE, data });\r\n","import React from 'react'\r\nimport './ResultCard.scss';\r\n\r\nconst ResultCard = ({item}) => {\r\n    return (\r\n        <div className=\"result-card-wrapper\">\r\n            <img className=\"result-card-image\" src={item.owner.avatar_url} alt=\"avatar\" />\r\n            <div className=\"result-card-information\">\r\n                 <h2 className=\"repo-name\">{item.name}\r\n                    <span className=\"repo-owner\">\r\n                        <a className=\"teal-text\" href={item.owner.html_url} target=\"_blank\" rel=\"noopener noreferrer\">{item.owner.login}</a> - {item.full_name}\r\n                    </span>\r\n                </h2>\r\n                <div className=\"repo-card-bottom-info\">\r\n                    <p className=\"repo-stars\"><i className=\"material-icons yellow-text\">star</i>{item.stargazers_count}</p>\r\n                    <p className=\"repo-language\">{item.language}</p>\r\n                </div>\r\n            </div>\r\n            <a className=\"btn result-card-link\" href={item.svn_url} target=\"_blank\" rel=\"noopener noreferrer\">Go to link</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResultCard\r\n","import React from 'react'\r\nimport ResultCard from '../ResultCard/ResultCard';\r\n\r\nconst Results = ({searchResults}) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {searchResults.map(item => <ResultCard key={item.id} item={item} />)}\r\n        </div>   \r\n    )\r\n}\r\n\r\nexport default Results\r\n","import React, { useState, useEffect } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { get } from 'lodash';\r\nimport ReactPaginate from 'react-paginate';\r\nimport { getSearchRepoRequest } from '../../redux/actions';\r\nimport Results from './../Results/Results';\r\nimport './Search.scss';\r\nconst Search = ({getSearchRepoRequest, searchResultsItems, searchResult}) => {\r\n    \r\n    const [ searchTerm, setSearchTerm ] = useState('');\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const [results, setSearchResults] = useState([]);\r\n    \r\n    useEffect(() => {\r\n        setSearchResults(searchResultsItems)\r\n    }, [searchResultsItems]);\r\n    \r\n\r\n     const submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const query = encodeURIComponent(searchTerm.trim());\r\n        if (query === '') return;\r\n        const searchParameters = {\r\n            query,\r\n            page: 1\r\n        }\r\n        getSearchRepoRequest(searchParameters);\r\n    };\r\n\r\n    const handleChange = event => {\r\n        setSearchTerm(event.target.value);\r\n    };\r\n\r\n    \r\n    \r\n    const paginate = e => {\r\n        window.scrollTo({top: 0, left: 0, behavior: 'smooth'});\r\n        const selectedPage = e.selected;\r\n        setCurrentPage(selectedPage);\r\n        const query = encodeURIComponent(searchTerm.trim());\r\n        if (query === '') return;\r\n        const searchParameters = {\r\n            query,\r\n            page: selectedPage + 1\r\n        }\r\n        getSearchRepoRequest(searchParameters);\r\n    };\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <form className=\"col s12 m8 l6 offset-m2 offset-l3 form-container\" onSubmit={submitHandler}>\r\n                <div className=\"row\">\r\n                    <div className=\"input-field col s12 form-input-container\">\r\n                        <input placeholder=\"Type a repo name...\" id=\"first_name\" type=\"text\" className=\"validate\" onChange={handleChange} />\r\n                        <button className=\"btn form-button\" type=\"submit\" name=\"action\"> Search\r\n                            <i className=\"material-icons right white-text\">send</i>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <Results searchResults={results} />\r\n                {searchResult.total_count > currentPage*20 &&\r\n                    <ReactPaginate\r\n                        breakLabel={'...'}\r\n                        breakClassName={'break-me'}\r\n                        pageCount={searchResult.total_count/20 > 50 ? 50 : searchResult.total_count/20}\r\n                        marginPagesDisplayed={2}\r\n                        pageRangeDisplayed={5}\r\n                        onPageChange={paginate}\r\n                        containerClassName={'pagination'}\r\n                        subContainerClassName={'pages pagination'}\r\n                        activeClassName={'active'}\r\n                        />\r\n\r\n                }\r\n                { searchResult.items && results.length === 0 && \r\n                    <p>No results</p>\r\n                }\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch =>({\r\n    getSearchRepoRequest: (query, currentPage) => dispatch(getSearchRepoRequest(query, currentPage))\r\n})\r\nconst mapStateToProps = ({data}) => ({ \r\n    searchResultsItems: get(data, 'searchResults.items', []),\r\n    searchResult: get(data, 'searchResults', {})\r\n});\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Search);","import React, { useEffect } from 'react'\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({classes}) => {\r\n    useEffect(() => {\r\n        document.documentElement.addEventListener('mousemove', eyeMovementAnimation)\r\n        return () => {\r\n          document.documentElement.removeEventListener('mousemove', eyeMovementAnimation);\r\n        }\r\n      }, [])\r\n\r\n      const eyeMovementAnimation = event => {\r\n        let eye = document.querySelectorAll('.eye');\r\n        eye.forEach(e => {\r\n          let x = (e.getBoundingClientRect().left) + (e.clientWidth / 2)\r\n          let y = (e.getBoundingClientRect().top) + (e.clientHeight / 2)\r\n          let radian = Math.atan2(event.pageX - x, event.pageY - y)\r\n          let rot = (radian * (180 / Math.PI) * -1) + 270;\r\n          e.style.transform = \"rotate(\" + rot + \"deg)\";\r\n        })\r\n      }\r\n\r\n    return (\r\n        <div className={`logo-container ${classes}`}>\r\n          <div className=\"face\">\r\n            <div className=\"eyes\">\r\n              <div className=\"eye\"></div>\r\n              <div className=\"eye\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport { connect } from \"react-redux\";\r\nimport { get } from 'lodash';\r\n\r\nimport Search from '../Search/Search';\r\nimport Logo from './../Logo/Logo';\r\n\r\nimport './Home.scss';\r\n\r\nconst Home = ({searchResults}) => {\r\n    return (\r\n        <div className={`wrapper ${searchResults.length > 0 ? 'top' : ''}`} wrapper>\r\n            <div className=\"container\">\r\n                <Logo />\r\n                <Search />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({data}) => ({ \r\n    searchResults: get(data, 'searchResults.items', [])\r\n});\r\nexport default connect(mapStateToProps, null)(Home);","import React from 'react';\r\nimport './App.css';\r\nimport Home from './components/Home/Home';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Home />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n    searchResults: {},\r\n};\r\n\r\nexport default initialState;","import initialState from './initialState';\r\n  \r\nfunction addReducer(state = initialState, {type, data}) {\r\n  switch(type) {\r\n    case 'GET_SEARCH_REPO_REQUEST':\r\n      return { ...state };\r\n    case 'GET_SEARCH_REPO_RESPONSE':\r\n      return { ...state, searchResults: data };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default addReducer;\r\n  ","import { combineReducers } from \"redux\";\r\n\r\nimport data from \"./state\";\r\n\r\nexport default combineReducers({\r\n  data\r\n});\r\n","import { put, takeEvery } from \"redux-saga/effects\";\r\nimport axios from 'axios';\r\n\r\n\r\nimport { \r\n    GET_SEARCH_REPO_REQUEST,\r\n    receiveApiDataAction,\r\n } from \"./actions\";\r\n\r\nexport function* getSearchRepoRequest(action) {\r\n      try {\r\n        const response = yield axios.get(\"https://api.github.com/search/repositories\",\r\n            {\r\n                params: {\r\n                    q: action.data.query,\r\n                    sort: 'stars',\r\n                    order: 'desc',\r\n                    page: action.data.page,\r\n                    per_page: 20\r\n                }\r\n            }\r\n        );\r\n        const { data } = response;\r\n        yield put(receiveApiDataAction(data));\r\n      } catch (e) {\r\n          console.log(e);\r\n      }\r\n};\r\n  \r\n\r\nexport default function* requestApiData() {\r\n  yield takeEvery( GET_SEARCH_REPO_REQUEST, getSearchRepoRequest );\r\n}\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nimport reducer from \"./reducers\";\r\nimport mySaga from \"./sagas\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nexport default createStore(reducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\r\n\r\nsagaMiddleware.run(mySaga);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\n\r\nconst rootElement = document.getElementById('root')\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  rootElement\r\n)\r\n\r\n\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}